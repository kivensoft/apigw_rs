# cargo build --release --target=x86_64-unknown-linux-musl
# cargo test -- --nocapture utils::unix_crypt::tests::test_rand_password
[package]
name = "apigw"
version = "0.9.11"
authors = ["kiven <kivensoft@gmail.com>"]
edition = "2024"
description = "intelligent community api gateway"
repository = "https://github.com/kivensoft/intelligent_community_gw"
build = "build.rs"

[profile.dev]
debug = false

[profile.release]
opt-level = 'z'  # Optimize for size
lto = true
strip = true
codegen-units = 1
incremental = false
panic = 'abort'

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []

[dependencies]
tokio = { version = "1.44", features = ["fs", "signal", "time"] } # 最流行的异步io库
tokio-utils = "0.1"
hyper = { version = "1.6", features = ["http1", "client"] } # 最流行的底层http协议库
hyper-util = { version = "0.1", features = [ "client", "client-legacy", "http1", "tokio" ] } #hyper 扩展库
http-body-util = "0.1" # http body 扩展库
serde = { version = "1.0", features = ["derive", "rc"] } # 最流行的序列化反序列化库
serde_json = "1.0" # 最流行的json序列化反序列化库
redis-async = "0.17" # 一个简单的异步redis库
form_urlencoded = "1.2" # url参数编解码库
urlencoding = "2.1" # url编解码库
cookie = { version = "0.18", features = ["percent-encode"] } # http cookie库
anyhow = "1.0" # 最流行的错误处理库
log = "0.4" # 日志门面库，官方标准
futures = "0.3" # 异步编程的官方库
futures-util = "0.3" # 异步扩展库
# time = { version = "0.3", features = ["formatting", "parsing", "macros", "serde"] } # 官方推荐的日期时间库
async-trait = "0.1" # trait的异步函数声明库
compact_str = { version = "0.9", features = ["serde", "bytes"] } # 小字符串内嵌的字符串替代库
parking_lot = "0.12" # 性能更好的替代标准库Mutex/RwLock的三方库
# triomphe = "0.1" # 比标准库的Arc更轻量的替代类(功能更多，对C++更友好)
# rclite = "0.2" # 比标准库的Arc更轻量的替代类(着重于减少内存占用)
# arc-swap = "1.7" # 类似Mutex<Arc<T>>的类，但更高效
# fnv = "1.0" # 在小数量时比hashmap更快的map
mini-moka = "0.10" # 轻量级缓存库，rust版本的Caffeine实现
dashmap = "6.1" # 高性能线程安全map
qp-trie = "0.8" # 一个基于qp算法的快速字典树
smallvec = { version = "1.15", features = ["write"] } # 基于栈的动态数组
smallstr = { version = "0.3", features = ["serde"] } # 基于栈的字符串
rand = "0.9" # 最广泛使用的随机数生成库
itoa = "1.0" # 快速整数转字符串库
# rusty-leveldb = { version = "3", features = ["asyncdb-tokio"] } # 基于leveldb的kv存储库
redb = "2.5"
base64 = "0.22"
# 支持命令行参数解析和配置文件参数解析的库
appcfg = { version = "1.0.3" }
# 支持终端ansi颜色的库
ansicolor = "1.0"
# 支持同步和异步两种方式的迷你日志实现库
asynclog = { version = "1.0.9", features = ["tokio"] }
# 本地时间序列化反序列化库
localtime = { git = "https://gitee.com/kivensoft/localtime_rs.git" }
# 迷你的http库
jwt = { git = "https://gitee.com/kivensoft/jwt_rs.git" }
# 迷你的http库
httpserver = { version = "1.0", features = ["english"], path = "httpserver" }
